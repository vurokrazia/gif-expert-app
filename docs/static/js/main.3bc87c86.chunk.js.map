{"version":3,"sources":["Components/AddCategory.js","heplpers/getGifs.js","Components/GridItem.js","Components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","prototype","PropTypes","func","isRequired","getGifs","search","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GridItem","className","src","alt","GifGrid","category","loading","state","setState","useEffect","then","response","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"oNAEMA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACLC,mBAAS,IADJ,mBAClCC,EADkC,KACtBC,EADsB,KAYzC,OACE,sBAAMC,SARY,SAACC,GACnBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAmBO,OACrCN,EAAc,MAIhB,SACE,uBACEO,KAAK,OACLC,MAAOT,EACPU,SAfoB,SAACP,GACzBF,EAAcE,EAAEQ,OAAOF,aAoB3BZ,EAAYe,UAAY,CACtBd,cAAee,IAAUC,KAAKC,YAGjBlB,Q,+BC7BFmB,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEfC,EAFe,iDAEiCC,UAAUH,GAF3C,+DAGFI,MAAMF,GAHJ,cAGfG,EAHe,gBAIEA,EAAKC,OAJP,uBAIbC,EAJa,EAIbA,KACFC,EAAOD,EAAKE,KAAI,SAAAC,GACpB,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QAThB,kBAYdM,GAZc,4CAAH,sDCEPO,EAAW,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAChC,OACE,sBAAKc,UAAU,2DAAf,UACE,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCFGO,EAAU,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,ECDb,SAACA,GAAc,IAAD,EACdtC,mBAAS,CACjCyB,KAAM,GACNc,SAAS,IAH6B,mBACjCC,EADiC,KAC1BC,EAD0B,KAaxC,OARAC,qBAAU,WACRzB,EAAQqB,GAAUK,MAAK,SAACC,GACtBH,EAAS,CACPhB,KAAMmB,EACNL,SAAS,SAGZ,CAACD,IACGE,EDV2BK,CAAaP,GAAjCP,EAFyB,EAE/BN,KAAcc,EAFiB,EAEjBA,QAOtB,OACE,qCACE,6BAAMD,IACN,6BAAKC,GAAW,mBAAGL,UAAU,mCAAb,uBAChB,qBAAKA,UAAU,YAAf,SAEIH,EAAOJ,KAAI,SAACC,GACV,OAAO,cAAC,EAAD,eAA2BA,GAAZA,EAAIC,aEGvBiB,EApBM,WAAO,IAAD,EAEW9C,mBAAS,IAFpB,mBAElB+C,EAFkB,KAENhD,EAFM,KAIzB,OACE,qCACE,8CACA,uBACA,cAAC,EAAD,CAAaA,cAAeA,IAG1BgD,EAAWpB,KAAI,SAACW,GACd,OAAO,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,U,MCZ/BU,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.3bc87c86.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types'\nconst AddCategory = ({ setCategories }) => {\n  const [inputValue, setInputValue] = useState('')\n  const handleInputChange = (e) => {\n    setInputValue(e.target.value);\n  }\n  const handleSubit = (e) => {\n    e.preventDefault();\n    if (inputValue.trim().length > 2) {\n      setCategories(cats => [inputValue,...cats])\n      setInputValue('')\n    }\n  }\n  return (\n    <form onSubmit={handleSubit}>\n      <input\n        type=\"text\"\n        value={inputValue}\n        onChange={handleInputChange}\n      />\n    </form>\n  )\n}\n\nAddCategory.prototype = {\n  setCategories: PropTypes.func.isRequired\n}\n\nexport default AddCategory;","export const getGifs = async (search) => {\n\n  const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(search)}&limit=10&api_key=xOnFUEAOmGpIf6k5uWjiFwXl2CP2rF5R`\n  const resp = await fetch(url);\n  const { data } = await resp.json();\n  const gifs = data.map(img => {\n    return {\n      id: img.id,\n      title: img.title,\n      url: img.images.downsized_medium.url\n    }\n  });\n  return gifs;\n}\n","import React from 'react'\n\nexport const GridItem = ({ title, url }) => {\n  return (\n    <div className=\"card animate__animated animate__fadeIn animate__delay-1s\">\n      <img src={url} alt={title} />\n      <p>{title}</p>\n    </div>\n  )\n}\n","import React, { useState, useEffect } from 'react'\nimport { getGifs } from '../heplpers/getGifs';\nimport { useFetchGifs } from '../hooks/useFetchGifs';\nimport { GridItem } from './GridItem';\nexport const GifGrid = ({ category }) => {\n\n  const { data: images, loading } = useFetchGifs(category);\n  // const [images, setImages] = useState([]);\n  // useEffect(() => {\n  //   getGifs(category).then(setImages)\n  // }, [category])\n\n\n  return (\n    <>\n      <h3 >{category}</h3>\n      <h5>{loading && <p className=\"animate__animated animate__flash\">Loading</p> }</h5>\n      <div className=\"card-grid\">\n        {\n          images.map((img) => {\n            return <GridItem key={img.id} {...img} />\n          })\n        }\n      </div>\n    </>\n  )\n}\n","import { useEffect, useState } from \"react\";\nimport { getGifs } from \"../heplpers/getGifs\";\n\nexport const useFetchGifs = (category) => {\n  const [state, setState] = useState({\n    data: [],\n    loading: true\n  });\n  useEffect(() => {\n    getGifs(category).then((response) => {\n      setState({\n        data: response,\n        loading: false\n      })\n    })\n  }, [category])\n  return state;\n}","import React, { useState } from 'react';\nimport AddCategory from './Components/AddCategory'\nimport { GifGrid } from './Components/GifGrid'\nconst GifExpertApp = () => {\n\n  const [categories, setCategories] = useState([])\n\n  return (\n    <>\n      <h2>GifExpertApp</h2>\n      <hr />\n      <AddCategory setCategories={setCategories} />\n\n      {\n        categories.map((category) => {\n          return <GifGrid key={category} category={category} />\n        })\n      }\n\n    </>\n  )\n}\n\nexport default GifExpertApp;\n","import ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css'\nReactDOM.render(\n  <GifExpertApp/>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}